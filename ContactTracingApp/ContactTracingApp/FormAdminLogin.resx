<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>